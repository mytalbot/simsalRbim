library(simsalRbim)
library(simsalRbim)
# INFORMED Simulation - INTRANSITIVITY RUN
frqnc      <- bimsim(rawdat      = dat,
GT          = GT,
simOpt      = simOpt,
limitToRun  = 50,
tcut        = 0.9,
filter.crit ="Iratio",
ylim        = c(0,0.45))
frqnc$frq
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
40-40-30
40-(40-10)
10/40
40-10
library(simsalRbim)
library(simsalRbim)
# INFORMED Simulation - INTRANSITIVITY RUN
frqnc      <- bimsim(rawdat      = dat,
GT          = GT,
simOpt      = simOpt,
limitToRun  = 50,
tcut        = 0.9,
filter.crit ="Iratio",
ylim        = c(0,0.45))
frqnc$frq
# Was von Ute -------------------------------------------------------------
# Vorgewese
library(dplyr)
library(tidyr)
data = read.delim("./testfolder/Ute Test/place_preference_30daysL_active time.txt", header= T, sep = "\t", dec= ".")
data = t(data)
data = as.data.frame(data)
data = mutate(data, compiled_studies = c( rep("structural",10), rep("active",10), rep("housing",10) ) ) #column with experiment (sructural, active, housing)
data = mutate(data, experiment_number = c(1:30) ) # column with experiment_number (day)
data = mutate(data, optionA = c("rope","clip_papertube","mouseswing","clip_papertube","second_plane","clip_plastictube","clip_plastictube","clip_plastictube","clip_plastictube","second_plane","treatball","tube_stones","flappuzzle","tube_stones","tube_stones","tube_stones","latticeball","treatball","flappuzzle","latticeball","floorhouse","woodenangle_with_hole","woodenangle_with_hole","woodenangle","paperhouse","floorhouse","paperhouse","houseball","woodenangle","houseball"))#f?gt ENR1 hinzu
data = mutate(data, optionB = c("mouseswing","rope","clip_papertube","second_plane","rope","rope","second_plane","clip_papertube","mouseswing","mouseswing","latticeball","flappuzzle","treatball","latticeball","slidingpuzzle","treatball","slidingpuzzle","slidingpuzzle","slidingpuzzle","flappuzzle","woodenangle","houseball","woodenangle","paperhouse","floorhouse","woodenangle_with_hole","woodenangle_with_hole","floorhouse","houseball","paperhouse"))#f?gt ENR2 hinzu
data = gather(data, key = subjectID, value = "quantityA", -compiled_studies, -experiment_number, -optionA, -optionB) #verwandelt mausspalten mit pr?ferenz in spalten
data = mutate(data, quantityB = 100- quantityA)
data = mutate(data, quantityA = ifelse(data[,6] > 50, 1, 0 ))
data = mutate(data, quantityB = ifelse(data[,7] > 50, 1, 0 ))
# hier beginnt die Rechnerey
simOpt     <- "second_plane"
GT         <- c("mouseswing", "clip_papertube",  "rope", "clip_plastictube")
predat     <- bimpre (dat=data, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = "worth",
ylim     = c(0.1,0.3))
worth
w_errors   <- bimeval(ydata     = predat,
worth     = worth$worth,
GT        = GT,
simOpt    = simOpt,
showPlot  = TRUE,
ylim     = c(0.1,0.3))
w_errors
# Vorgewese
library(dplyr)
library(tidyr)
data = read.delim("./testfolder/Ute Test/place_preference_30daysL_active time.txt", header= T, sep = "\t", dec= ".")
data = t(data)
data = as.data.frame(data)
data = mutate(data, compiled_studies = c( rep("structural",10), rep("active",10), rep("housing",10) ) ) #column with experiment (sructural, active, housing)
data = mutate(data, experiment_number = c(1:30) ) # column with experiment_number (day)
data = mutate(data, optionA = c("rope","clip_papertube","mouseswing","clip_papertube","second_plane","clip_plastictube","clip_plastictube","clip_plastictube","clip_plastictube","second_plane","treatball","tube_stones","flappuzzle","tube_stones","tube_stones","tube_stones","latticeball","treatball","flappuzzle","latticeball","floorhouse","woodenangle_with_hole","woodenangle_with_hole","woodenangle","paperhouse","floorhouse","paperhouse","houseball","woodenangle","houseball"))#f?gt ENR1 hinzu
data = mutate(data, optionB = c("mouseswing","rope","clip_papertube","second_plane","rope","rope","second_plane","clip_papertube","mouseswing","mouseswing","latticeball","flappuzzle","treatball","latticeball","slidingpuzzle","treatball","slidingpuzzle","slidingpuzzle","slidingpuzzle","flappuzzle","woodenangle","houseball","woodenangle","paperhouse","floorhouse","woodenangle_with_hole","woodenangle_with_hole","floorhouse","houseball","paperhouse"))#f?gt ENR2 hinzu
data = gather(data, key = subjectID, value = "quantityA", -compiled_studies, -experiment_number, -optionA, -optionB) #verwandelt mausspalten mit pr?ferenz in spalten
data = mutate(data, quantityB = 100- quantityA)
data = mutate(data, quantityA = ifelse(data[,6] > 50, 1, 0 ))
data = mutate(data, quantityB = ifelse(data[,7] > 50, 1, 0 ))
# hier beginnt die Rechnerey
simOpt     <- "second_plane"
GT         <- c("mouseswing", "clip_papertube",  "rope", "clip_plastictube")
predat     <- bimpre (dat=data, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = "worth",
ylim     = c(0.1,0.3))
worth
120-80
120-(120-80)
80/120
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Kacke"
GT         <- c("Huehner", "Zicke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Huehner", "Kacke", "Zacke","Zicke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke","HoiHoiHoi")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","Huehner", "Kacke", "HoiHoiHoi")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","Huehner", "Kacke", "HoiHoiHoi")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","Huehner", "Kacke", "HoiHoiHoi")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","Huehner", "Kacke", "HoiHoiHoi")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke", )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke"  )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zacke"
GT         <- c("Zicke","HoiHoiHoi","Huehner", "Kacke"  )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
ydata    = predat
GT       = GT
simOpt   = simOpt
randOP   = TRUE
intrans  = TRUE
showPlot = "worth"
worth <- NULL
# Decision Ratio (a quality estimatation)
Dratio = sum(ydata$result==1)/sum(ydata$result==-1)
# create the item list
optionList <- c(GT, simOpt)
optionList
# Randomize open pairs
if(randOP==TRUE){
nosim   <- ydata[ydata$sim==FALSE, ]
simdat  <- ydata[ydata$sim==TRUE,  ]
simdat$result  <- sample(c(0,1,-1), replace=TRUE, length(simdat$result))
ydata   <- rbind(nosim, simdat)
}else{}
# calculate the intransitivity
if(intrans==TRUE){
I <- bimintrans(dat      = ydata,
idcolumn = "subjectID",
I2       = "optionB",
I1       = "optionA",
response = "result")
}else{}
I
### Do the model
modData    <- dcast(ydata, formula = subjectID ~ test,
fun.aggregate = sum, value.var = 'result')
modData$subjectID <- NULL
library(reshape2)
library(prefmod)
### Do the model
modData    <- dcast(ydata, formula = subjectID ~ test,
fun.aggregate = sum, value.var = 'result')
modData$subjectID <- NULL
modelY     <- llbt.design(modData, nitems = length(optionList),
objnames = optionList   )
length(optionList)
modData
modData    <- dcast(ydata, formula = subjectID ~ test,
fun.aggregate = sum, value.var = 'result')
modData$subjectID <- NULL
modelY     <- llbt.design(modData, nitems = length(optionList),
objnames = optionList   )
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","HoiHoiHoi","Huehner", "Kacke",  )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("Zacke","HoiHoiHoi","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
# ZickeZacke w/ HoiHoiHoi item  -------------------------------------------
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zicke","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
bimpre (dat=dat, GT=GT, simOpt=simOpt)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Kacke"
GT         <- c("Huehner", "Zicke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Kacke"
GT         <- c("Huehner", "Zicke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
w_errors   <- bimeval(ydata     = predat,
worth     = worth$worth,
GT        = GT,
simOpt    = simOpt,
showPlot  = TRUE  )
# remember: we want mean_delta to be high (close to 50%)
w_errors
dat        <- ZickeZacke
simOpt     <- "Zicke"
GT         <- c("HoiHoiHoi","Zacke","Huehner", "Kacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
predat
bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
bimintrans
library(simsalRbim)
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
library(simsalRbim)
library(simsalRbim)
# Bubblesize umdrehen in certainty
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Huehner", "Kacke", "Zacke")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt )
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth") # or "coef"
worth
# Human Large Valence (Spring School) -------------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Frustrated","Crow","War","Cat","Doctor", "Fire")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = "worth")
worth
ZickeZacke
