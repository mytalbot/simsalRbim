if (thisData[count,vIMG1]==thirdI & thisData[count, vIMG2]==firstI) {
}else if (thisData[count, resVar]==1)  {
CoverA<-1
}else {CoverA<-0}
if (thisData[count,vIMG1]==firstI & thisData[count, vIMG2]==thirdI) {
}else if (thisData[count, resVar]==1)  {
CoverA<-1
}else {CoverA<-0}
}
#Invalid cases (A>B)&(B>C)&(C>A) OR (B>A)&(C>B)&(A>C)
if(AoverB & BoverC & CoverA)
{
#print(paste(thisID,":",firstI,">",secondI,">",thirdI,">",firstI, "(clockwise A>B>C>A)"))
intranscount<-intranscount+1
}
if(!AoverB & !BoverC & !CoverA)
{
#print(paste(thisID,":",firstI,">",thirdI,">",secondI,">",firstI, "(counterclockwise A>C>B>A)"))
intranscount<-intranscount+1
}
tripletcount  <-tripletcount+1
}
}
}
}
tripletcount
intranscount
?bimworth
library(testthat)
ZickeZacke
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
library(simsalRbim)
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data test------------------------------------------------------------
# Introduction of the Nackmull
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
dat        <- rbind(dat, data.frame(subjectID = c("16de27e0","16de27e0","1cdf6341","36f1fbb9"),
optionA   = c("Lake","Doctor","Frustrated","Crow"),
optionB   = c("Nacktmull","Nacktmull","Nacktmull", "Nacktmull"),
quantityA = c(220,190,50,120),
quantityB = c(40,170,22,114),
sideA     = c("left", "left", "left", "left")))
simOpt     <- "Nacktmull"
GT         <- c("Lake","Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=20, ylim=c(-1,2) )
cutoff$cutoff
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=50, ylim=c(-1,2) )
cutoff$cutoff
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=200, ylim=c(-1,2) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=184, showPlot=TRUE )
pos$simerrors
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=14, showPlot=TRUE )
pos$simerrors
?bimsim
library(simsalRbim)
?bimsim
library(simsalRbim)
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
library(simsalRbim)
library(simsalRbim)
?bimpos
library(simsalRbim)
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
### Now we do an uninformed item positioning, also to obtain a reasonable threshold for the no. of randomizations
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=78, showPlot=TRUE )
pos$simerrors
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=78, showPlot=TRUE )
pos$simerrors
library(simsalRbim)
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=78, showPlot=TRUE )
pos$simerrors
frqnc      <- bimsim(ydata = predat, GT=GT, simOpt=simOpt, limitToRun=78, fval= 0.50, showPlot=TRUE, ylim=c(0,0.7))
frqnc$frq
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data 1 --------------------------------------------------------------
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
simOpt     <- "Lake"
GT         <- c("Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data test------------------------------------------------------------
# Introduction of the Nackmull
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
dat        <- rbind(dat, data.frame(subjectID = c("16de27e0","16de27e0","1cdf6341","36f1fbb9"),
optionA   = c("Lake","Doctor","Frustrated","Crow"),
optionB   = c("Nacktmull","Nacktmull","Nacktmull", "Nacktmull"),
quantityA = c(220,190,50,120),
quantityB = c(40,170,22,114),
sideA     = c("left", "left", "left", "left")))
simOpt     <- "Nacktmull"
GT         <- c("Lake","Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data test------------------------------------------------------------
# Introduction of the Nackmull
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
dat        <- rbind(dat, data.frame(subjectID = c("16de27e0","16de27e0","1cdf6341","36f1fbb9"),
optionA   = c("Lake","Doctor","Frustrated","Crow"),
optionB   = c("Nacktmull","Nacktmull","Nacktmull", "Nacktmull"),
quantityA = c(220,190,50,120),
quantityB = c(40,170,22,114),
sideA     = c("left", "left", "left", "left")))
simOpt     <- "Nacktmull"
GT         <- c("Lake","Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
# Human data test------------------------------------------------------------
# Introduction of the Nackmull
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
dat        <- rbind(dat, data.frame(subjectID = c("16de27e0","16de27e0","1cdf6341","36f1fbb9"),
optionA   = c("Lake","Doctor","Frustrated","Crow"),
optionB   = c("Nacktmull","Nacktmull","Nacktmull", "Nacktmull"),
quantityA = c(220,190,50,120),
quantityB = c(40,170,22,114),
sideA     = c("left", "left", "left", "left")))
simOpt     <- "Nacktmull"
GT         <- c("Lake","Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=50, ylim=c(-1,2) )
cutoff$cutoff
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=50, ylim=c(-1,2) )
cutoff$cutoff
printf("simsalRbim: Random fluctuation is still high - \n
try increasing the number of runs.\n")
# Helper function
printf     <- function(...) cat(sprintf(...))
printf("simsalRbim: Random fluctuation is still high - \n
try increasing the number of runs.\n")
printf("simsalRbim: Random fluctuation is still high -
try increasing the number of runs.\n")
printf("simsalRbim: Random fluctuation is still high -
try increasing the number of runs.\n")
printf("simsalRbim: Random fluctuation is still high -
try increasing the number of runs.\n")
printf("simsalRbim: Random fluctuation is still high -
try increasing the number of runs.\n")
printf("simsalRbim: Random fluctuation is still high -
try increasing the number of runs.\n")
library(simsalRbim)
# Human data test------------------------------------------------------------
# Introduction of the Nackmull
dat        <- bimload ("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/human_LagreValenceRange_SpringSchool.txt")
dat        <- rbind(dat, data.frame(subjectID = c("16de27e0","16de27e0","1cdf6341","36f1fbb9"),
optionA   = c("Lake","Doctor","Frustrated","Crow"),
optionB   = c("Nacktmull","Nacktmull","Nacktmull", "Nacktmull"),
quantityA = c(220,190,50,120),
quantityB = c(40,170,22,114),
sideA     = c("left", "left", "left", "left")))
simOpt     <- "Nacktmull"
GT         <- c("Lake","Crow","War","Cat","Doctor", "Fire", "Frustrated")
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
showPlot = TRUE)
worth
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=50, ylim=c(-1,2) )
cutoff$cutoff
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
showPlot = TRUE)
worth
0.22+0.055+0.0175+0.704
ZickeZacke
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=78, showPlot=TRUE )
pos$simerrors
frqnc      <- bimsim(ydata = predat, GT=GT, simOpt=simOpt, limitToRun=78, fval= 0.50, showPlot=TRUE, ylim=c(0,0.7))
frqnc$frq
?use_vignette
?usethis::use_vignette()
usethis::use_vignette("simsalRbim_vignette, title="simsalRbim")
usethis::use_vignette("simsalRbim_vignette", title="simsalRbim")
?scale_fill_viridis_c
cite("rlang")
citation("rlang")
citation("stringr")
citation("utils")
citation("stats")
version()
version
?bimload
bimpre
?bimpre
?bimworth
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c("Zacke", "Huehner", "Kacke",  "Zicke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = TRUE)
worth
### Now we do an uninformed item positioning, also to obtain a reasonable threshold for the no. of randomizations
cutoff     <- bimUninformed(ydat=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
?bimUninformed
cutoff     <- bimUninformed(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
library(simsalRbim)
cutoff     <- bimUninformed(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-1,2) )
cutoff$cutoff
?bimpos
?bimsim
citation("prefmod")
library(simsalRbim)
Sys.setenv('PATH' = paste0('C:\Program Files\qpdf-10.2.0\bin;', Sys.getenv('PATH')))
Sys.setenv('PATH' = paste0('C:/Program Files/qpdf-10.2.0/bin;', Sys.getenv('PATH')))
library(simsalRbim)
library(simsalRbim)
library(simsalRbim)
library(simsalRbim)
git add .
