library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p
data.frame(hworY)
rownames(data.frame(hworY))
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.6, "lines"),
point.padding = unit(0.6, "lines"),
show.legend   = FALSE )
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <-p + geom_text()
p
rownames(data.frame(hworY))
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <-p + geom_text(rownames(data.frame(hworY)))
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <-p + geom_text(aes(rownames(data.frame(hworY)))
)
p
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <-p + geom_text(aes(label=rownames(data.frame(hworY)))
)
p
plot( hworY, ylim=ylim, ylab="Worth value") # traditional worth plot
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_text(aes(label=rownames(data.frame(hworY))))
p
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_text(aes(label=rownames(data.frame(hworY))), hjust=rep(c(1,0,-1))
)
p
c(1,0,-1)
geom_text(aes(label=rownames(data.frame(hworY)) , hjust=rep(c(1,-1) )
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_text(aes(label=rownames(data.frame(hworY)) , hjust=rep(c(1,-1) )))
p
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_text(aes(label=rownames(data.frame(hworY)) , hjust=rep(c(1,-1,1,-1) )))
p
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.6, "lines"),
point.padding = unit(0.6, "lines"),
show.legend   = FALSE )
?geom_label_repel
library(ggrepel)
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.6, "lines"),
point.padding = unit(0.6, "lines"),
show.legend   = FALSE )
p
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.9, "lines"),
point.padding = unit(0.9, "lines"),
show.legend   = FALSE )
p
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
ylim(ylim) +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
ylim(ylim) +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.9, "lines"),
point.padding = unit(0.9, "lines"),
show.legend   = FALSE )
p <- p + theme(axis.text.x = element_blank())
p <- p +  theme(axis.line        = element_line(colour = "black"),
strip.background = element_rect(fill = "white", colour = "black", size = 0.8),
strip.text       = element_text(size = 12),
axis.text.x      = element_text(size = 12),
axis.title.x     = element_text(size = 13),
axis.text.y      = element_text(size = 13),
axis.title.y     = element_text(size = 14))
print(p)
ylim=NULL
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=7, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
ylim(ylim) +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.9, "lines"),
point.padding = unit(0.9, "lines"),
show.legend   = FALSE )
p <- p + theme(axis.text.x = element_blank())
p <- p +  theme(axis.line        = element_line(colour = "black"),
strip.background = element_rect(fill = "white", colour = "black", size = 0.8),
strip.text       = element_text(size = 12),
axis.text.x      = element_text(size = 12),
axis.title.x     = element_text(size = 13),
axis.text.y      = element_text(size = 13),
axis.title.y     = element_text(size = 14))
print(p)
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
ylim = c(0,1),
showPlot = "worth")
worth
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=size, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
ylim(ylim) +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(axis.text.x = element_blank())
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.9, "lines"),
point.padding = unit(0.9, "lines"),
show.legend   = FALSE )
p <- p + theme(axis.text.x = element_blank())
p <- p +  theme(axis.line        = element_line(colour = "black"),
strip.background = element_rect(fill = "white", colour = "black", size = 0.8),
strip.text       = element_text(size = 12),
axis.text.x      = element_text(size = 12),
axis.title.x     = element_text(size = 13),
axis.text.y      = element_text(size = 13),
axis.title.y     = element_text(size = 14))
print(p)
# plotting the worth values
p <- ggplot(data.frame(hworY), aes(x=rep(1,dim(hworY)[1]), y=worth) ) +
geom_line() +
geom_point(color="black", shape=21, size=size, fill= cols, stroke=1.2  ) +
labs(title     = "Preferences") +
ylab("Worth value") +
xlab("Items")  +
ylim(ylim) +
theme_bw() +
scale_x_discrete(limits = factor(1))
p <- p + theme(legend.position         = "none")
p <- p + geom_label_repel(aes(label     = rownames(data.frame(hworY))),
size          = 4,
box.padding   = unit(0.9, "lines"),
point.padding = unit(0.9, "lines"),
show.legend   = FALSE )
p <- p + theme(axis.text.x = element_blank())
p <- p +  theme(axis.line        = element_line(colour = "black"),
strip.background = element_rect(fill = "white", colour = "black", size = 0.8),
strip.text       = element_text(size = 12),
axis.text.x      = element_text(size = 12),
axis.title.x     = element_text(size = 13),
axis.text.y      = element_text(size = 13),
axis.title.y     = element_text(size = 14))
p <- p + theme(axis.text.x = element_blank())
print(p)
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt )
w_errors
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c( "Huehner", "Kacke",  "Zicke","Zacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt, filtersim=FALSE )
w_errors
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
library(simsalRbim)
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt )
w_errors
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt )
w_errors
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt )
w_errors
# Introduction of a new item with restricted measurements -----------------
# Import from a fresh file w/ Coke items
# and 1 Tie
dat        <- ZickeZacke
simOpt     <- "HoiHoiHoi"
GT         <- c( "Huehner", "Kacke",  "Zicke","Zacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
randOP   = TRUE,
intrans  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt, filtersim=FALSE )
w_errors
cutoff     <- bimUninformed(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=100, ylim=c(-0.6,1.1) )
cutoff$cutoff
pos        <- bimpos(ydata=predat, GT=GT, simOpt=simOpt, limitToRun=78, showPlot=TRUE )
pos$simerrors
frqnc      <- bimsim(ydata = predat, GT=GT, simOpt=simOpt, limitToRun=78, fval= 0.25, showPlot=TRUE, ylim=c(0,0.7))
frqnc$frq
library(simsalRbim)
#  Perfect use case with no randomized items ------------------------------
dat        <- bimload("C:/MHH Bleich/Aktuelles/PrePrefPackage 2020/data/ZickeZackelinear.txt")
# dat <- dat[dat$subjectID=="eins", ]
simOpt     <- "Zicke"
GT         <- c("Zacke", "Huehner", "Kacke" )
predat     <- bimpre (dat=dat, GT=GT, simOpt=simOpt, deviation=0, minQuantity=0)
worth      <- bimworth(ydata    = predat,
GT       = GT,
simOpt   = simOpt,
intrans  = TRUE,
verbose  = TRUE,
showPlot = "worth")
worth
w_errors   <- bimeval(ydata=predat, worth= worth$worth, GT=GT, simOpt=simOpt )
w_errors
pkgdown::build_site()
library(simsalRbim)
